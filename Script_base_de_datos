DROP DATABASE IF EXISTS colegioagazzis;
CREATE DATABASE IF NOT EXISTS colegioagazzis DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE colegioagazzis;

CREATE TABLE grados (
    id_grado INT PRIMARY KEY AUTO_INCREMENT,
    nombre_grado VARCHAR(10) NOT NULL UNIQUE,
    matricula DECIMAL(5,2) NOT NULL,
	cuota DECIMAL(5,2) NOT NULL, 
    fecha_vencimiento_matricula DATE NOT NULL,
    fecha_vencimiento_cuota DATE NOT NULL,
    CONSTRAINT CHK_matricula_grado CHECK (matricula >= 0),
	CONSTRAINT CHK_cuota_grado CHECK (cuota >= 0)
);

CREATE TABLE secciones (
    id_seccion INT PRIMARY KEY AUTO_INCREMENT, 
    nombre_seccion VARCHAR(2) NOT NULL,
    CONSTRAINT UNQ_nombre_seccion UNIQUE (nombre_seccion)
);

CREATE TABLE cursos (
    id_curso INT PRIMARY KEY AUTO_INCREMENT,
    id_grado INT NOT NULL,
    id_seccion INT NOT NULL,
    CONSTRAINT fk_tbseccion_tbgrado FOREIGN KEY (id_grado) REFERENCES grados(id_grado),
    CONSTRAINT fk_tbcursos_tbseccion FOREIGN KEY (id_seccion) REFERENCES secciones(id_seccion)
);

CREATE TABLE materias (
    id_materia INT PRIMARY KEY AUTO_INCREMENT,
    tipo_materia ENUM ('Básica','Complementaria') NOT NULL,	
    nombre_materia VARCHAR(100) NOT NULL
);

CREATE TABLE responsables_estudiantes (
    id_responsable INT PRIMARY KEY AUTO_INCREMENT,
    nombre_responsable VARCHAR(50) NOT NULL,
    apellido_responsable VARCHAR(50) NOT NULL,
    telefono_responsable INT NOT NULL,
    direccion_responsable VARCHAR(100) NOT NULL,
    correo_responsable VARCHAR(100) NOT NULL,
    parentesco ENUM('Padre', 'Madre', 'Otro') NOT NULL,
    CONSTRAINT UNQ_telefono_responsable UNIQUE (telefono_responsable),
    CONSTRAINT UNQ_correo_responsable UNIQUE (correo_responsable),
    CONSTRAINT CHK_telefono_responsables CHECK (telefono_responsable REGEXP '^[0-9]{8}$'),
    CONSTRAINT CHK_telefono_responsables_estudiantes CHECK (LENGTH(telefono_responsable) = 8),
    CONSTRAINT CHK_correo_responsables_estudiantes CHECK (correo_responsable REGEXP '^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$')
);

CREATE TABLE estudiantes (
    id_estudiante INT PRIMARY KEY AUTO_INCREMENT,
    alias_estudiante VARCHAR(20) NOT NULL,
    clave_estudiante VARCHAR(255) NOT NULL,
    nombre_estudiante VARCHAR(50) NOT NULL,
    apellido_estudiante VARCHAR(50) NOT NULL,
    imagen_estudiante VARCHAR(80) NOT NULL,
    fecha_matriculacion DATE DEFAULT NOW(),
    fecha_nacimiento DATE NOT NULL,
    estado_estudiante ENUM('Deshabilitado', 'Habilitado') NOT NULL ,
    genero ENUM('Masculino', 'Femenino') NOT NULL,
    horario ENUM('Matutino', 'Vespertino') NOT NULL, 
    tipo_sangre ENUM('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-') NULL,
    id_responsable INT NOT NULL,
    id_curso INT NULL,
    CONSTRAINT UNQ_alias_estudiante UNIQUE (alias_estudiante),
    CONSTRAINT fk_tbcurso_tbestudiante FOREIGN KEY (id_curso) REFERENCES cursos(id_curso),
    CONSTRAINT fk_estudiantes_responsables FOREIGN KEY (id_responsable) REFERENCES responsables_estudiantes(id_responsable)
);
 

CREATE TABLE roles (
    id_rol INT PRIMARY KEY AUTO_INCREMENT,
    nombre_rol VARCHAR(50) NOT NULL,
    agregar_estudiantes BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_profesores BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_cursos BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_materias BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_trimestres BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_asignaciones BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_notas BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_sesiones BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_asistencias BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_faltas BOOLEAN NOT NULL DEFAULT FALSE,
    quitar_faltas BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_uniformes BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_cuotas BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_pagos BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_tallas BOOLEAN NOT NULL DEFAULT FALSE,
    agregar_catalogo BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE profesores (
    id_profesor INT PRIMARY KEY AUTO_INCREMENT,
    alias_profesor VARCHAR(50) NOT NULL,
    nombre_profesor VARCHAR(50) NOT NULL,
    apellido_profesor VARCHAR(50) NOT NULL,
    correo_profesor VARCHAR(100) NOT NULL,
    telefono_profesor INT NOT NULL,
    direccion_profesor VARCHAR(100) NOT NULL, 
    clave_profesor VARCHAR(255) NOT NULL,
    id_rol INT NOT NULL,
    foto_profesor VARCHAR(80) NULL,
	dui_profesor VARCHAR(10) NOT NULL,
	CONSTRAINT UNQ_correo_profesor UNIQUE (correo_profesor),
	CONSTRAINT UNQ_telefono_profesor UNIQUE (telefono_profesor),
	CONSTRAINT UNQ_dui_profesor UNIQUE (dui_profesor),
	CONSTRAINT CHK_dui_profesores CHECK (dui_profesor REGEXP '^[0-9]{8}-[0-9]{1}$'),
    CONSTRAINT CHK_telefono_profesores CHECK (telefono_profesor REGEXP '^[0-9]{8}$'),
    CONSTRAINT CHK_correo_profesores CHECK (correo_profesor REGEXP '^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'),
    CONSTRAINT fk_profesores_roles FOREIGN KEY (id_rol) REFERENCES Roles(id_rol)
);

CREATE TABLE cursos_profesores (
    id_curso_profesor INT PRIMARY KEY AUTO_INCREMENT,
    id_profesor INT NOT NULL,
    id_curso INT NOT NULL,
    profesor_guia BOOLEAN NOT NULL,
    CONSTRAINT fk_cursos_profesores_profesores FOREIGN KEY (id_profesor)
        REFERENCES profesores (id_profesor),
    CONSTRAINT fk_cursos_profesores_cursos FOREIGN KEY (id_curso)
        REFERENCES cursos (id_curso)
);

CREATE TABLE profesores_materias(
	id_profesor_materia INT PRIMARY KEY AUTO_INCREMENT,
    id_curso_profesor INT NOT NULL,
    id_materia INT NOT NULL,
    materia_principal BOOLEAN NOT NULL,
	CONSTRAINT fk_profesores_materias FOREIGN KEY (id_materia) REFERENCES materias(id_materia),
    CONSTRAINT fk_materias_curso_profesores FOREIGN KEY (id_curso_profesor) REFERENCES cursos_profesores(id_curso_profesor)
);

CREATE TABLE periodos_anuales(
    id_periodo_anual INT PRIMARY KEY AUTO_INCREMENT,
    periodo_anual YEAR NOT NULL,
    mora_anual DECIMAL(4,2) NOT NULL
);


CREATE TABLE trimestres (
    id_trimestre INT PRIMARY KEY AUTO_INCREMENT,
    nombre_trimestre VARCHAR(20) NOT NULL,
    lapso_anual YEAR NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    id_periodo_anual INT NOT NULL,
    CONSTRAINT FK_periodos_anuales_trimestres FOREIGN KEY (id_periodo_anual) REFERENCES periodos_anuales(id_periodo_anual)
);


CREATE TABLE tipos_asignaciones (
    id_tipo_asignacion INT PRIMARY KEY AUTO_INCREMENT,
    nombre_tipo_asignacion VARCHAR(100) NOT NULL,
    CONSTRAINT UNQ_nombre_tipo_asignacion UNIQUE (nombre_tipo_asignacion)
);

CREATE TABLE asignaciones (
    id_asignacion INT PRIMARY KEY AUTO_INCREMENT,
    nombre_actividad VARCHAR(100) NOT NULL,
    descripcion varchar(200) NULL, 
    porcentaje INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_finalizacion DATE NOT NULL,
    id_tipo_asignacion INT NOT NULL,
    id_trimestre INT NOT NULL,
    id_profesor_materia INT NOT NULL,
    id_curso INT NOT NULL,
    CONSTRAINT fk_tbtrimestre_tbactividades FOREIGN KEY (id_trimestre) REFERENCES trimestres(id_trimestre),
    CONSTRAINT fk_tbprofesormateria_tbactividades FOREIGN KEY (id_profesor_materia) REFERENCES profesores_materias(id_profesor_materia),
    CONSTRAINT fk_tbtipoasignacion_tbasignacion FOREIGN KEY (id_tipo_asignacion) REFERENCES tipos_asignaciones(id_tipo_asignacion),
    CONSTRAINT fk_tbcurso_tbactividades FOREIGN KEY (id_curso) REFERENCES cursos(id_curso),
    CONSTRAINT CHK_porcentaje_asignacion CHECK (porcentaje >= 1 and porcentaje <=100)
);

CREATE TABLE notas_asignaciones (
    id_nota INT PRIMARY KEY AUTO_INCREMENT,
    id_estudiante INT NOT NULL,
    id_asignacion INT NOT NULL,
    nota DECIMAL(2,2) NOT NULL,
    CONSTRAINT fk_tbestudiantes_tbnotasact FOREIGN KEY (id_estudiante) REFERENCES estudiantes(id_estudiante),
    CONSTRAINT fk_tbasignaciones_tbestudiantes FOREIGN KEY (id_asignacion) REFERENCES asignaciones(id_asignacion),
    CONSTRAINT CHK_nota_asignacion CHECK (nota >= 0 and nota <= 10)
);


CREATE TABLE dias_horarios (
   id_dia_horario INT PRIMARY KEY AUTO_INCREMENT,
   dia  ENUM ('Lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado', 'domingo') NOT NULL,
   tipo_jornada VARCHAR(10)  NOT NULL,
   inicio_jornada TIME,
   final_jornada TIME 
);

CREATE TABLE bloques_clases(
    id_bloque INT PRIMARY KEY AUTO_INCREMENT,
	id_profesor INT NOT NULL,
    id_materia INT NOT NULL, 
    id_curso INT NOT NULL,
    id_dia_horario INT NOT NULL,
    incio_bloque TIME NOT NULL, 
    final_bloque TIME  NOT NULL,
	CONSTRAINT fk_tbdiashorarios_tbnotasact FOREIGN KEY (id_dia_horario) REFERENCES dias_horarios(id_dia_horario)
);



CREATE TABLE asistencias (
    id_asistencia INT PRIMARY KEY AUTO_INCREMENT,
    id_estudiante INT NOT NULL,
    id_bloque INT NOT NULL,
    asistencia ENUM('Presente', 'Ausente') NOT NULL,
    justificacion_asistencia ENUM('Justificado', 'Injustificado') NULL,
    fecha_asistencia DATETIME NOT NULL,
    CONSTRAINT fk_tbestudiantes_tbasistencias FOREIGN KEY (id_estudiante) REFERENCES estudiantes(id_estudiante),
    CONSTRAINT fk_tbbloquesclases_tbasistencias FOREIGN KEY (id_bloque) REFERENCES bloques_clases(id_bloque)
);

CREATE TABLE tipos_faltas (
    id_categoria_falta INT PRIMARY KEY AUTO_INCREMENT,
    categoria ENUM('Leve', 'Grave', 'Muy Grave') NOT NULL,
    ponderacion DECIMAL(2,2) NOT NULL,
    CONSTRAINT CHK_ponderacion_falta CHECK (ponderacion >= 0 and ponderacion <= 10)
);

CREATE TABLE faltas (
    id_falta INT PRIMARY KEY AUTO_INCREMENT,
    id_categoria_falta INT NOT NULL,
    nombre_falta VARCHAR(100) NOT NULL,
    CONSTRAINT UNQ_nombre_falta UNIQUE (nombre_falta),
    CONSTRAINT fk_tipo_falta_categoria FOREIGN KEY (id_categoria_falta) REFERENCES tipos_faltas(id_categoria_falta)
);

CREATE TABLE faltas_estudiantes (
    id_falta_estudiante INT PRIMARY KEY AUTO_INCREMENT,
    id_estudiante INT NOT NULL,
    id_profesor INT NOT NULL,
    id_falta INT NOT NULL,
    fecha_falta DATETIME DEFAULT NOW(),
    CONSTRAINT fk_tbestudiantes_faltaestudiante FOREIGN KEY (id_estudiante) REFERENCES estudiantes(id_estudiante),
    CONSTRAINT fk_tbfaltas_faltaestudiante FOREIGN KEY (id_falta) REFERENCES faltas(id_falta),
    CONSTRAINT fk_tbmaestros_faltaestudiante FOREIGN KEY (id_profesor) REFERENCES profesores(id_profesor)
);

CREATE TABLE cuotas_pagos (
    id_cuota INT PRIMARY KEY AUTO_INCREMENT,
    id_estudiante INT NOT NULL,
    fecha_pago DATE NULL,
    estado_pago ENUM('Pendiente', 'Pagado') NOT NULL DEFAULT 'Pendiente',
    estado_cargo ENUM ('Con mora', 'Sin mora') NOT NULL DEFAULT 'Sin mora',
    CONSTRAINT fk_tbestudiantes_tbcuotaspagos FOREIGN KEY (id_estudiante) REFERENCES estudiantes(id_estudiante)
);

CREATE TABLE matriculas_pagos(
    id_matricula INT PRIMARY KEY AUTO_INCREMENT,
    id_estudiante INT NOT NULL,
    id_grado INT NOT NULL,
    primer_pago DECIMAL(5,2) NOT NULL,
    segundo_pago DECIMAL(5,2) NULL,
    fecha_primer_pago DATE NOT NULL,
    fecha_segundo_pago DATE NULL,
    estado_pago ENUM('Pendiente', 'Pagado') NOT NULL DEFAULT 'Pendiente',
    estado_cargo ENUM ('Con mora', 'Sin mora') NOT NULL DEFAULT 'Sin mora',
    CONSTRAINT CHK_primer_pago_matricula CHECK (primer_pago >= 0),
    CONSTRAINT CHK_segundo_pago_matricula CHECK (segundo_pago >= 0),
    CONSTRAINT fk_tbestudiantes_tbmatriculaspagos FOREIGN KEY (id_estudiante) REFERENCES estudiantes(id_estudiante),
    CONSTRAINT fk_tbgrados_tbmatriculaspagos FOREIGN KEY (id_grado) REFERENCES grados(id_grado)
);

CREATE TABLE tallas_uniformes (
    id_talla INT PRIMARY KEY AUTO_INCREMENT,
    talla VARCHAR(10) NOT NULL,
    CONSTRAINT UNQ_talla_uniforme UNIQUE (talla)
);

CREATE TABLE tipos_uniformes (
    id_tipo_uniforme INT PRIMARY KEY AUTO_INCREMENT,
    tipo_uniforme VARCHAR(100) NOT NULL,
    CONSTRAINT UNQ_tipo_uniforme UNIQUE (tipo_uniforme)
);

CREATE TABLE catalogos_uniformes (
    id_uniforme INT PRIMARY KEY AUTO_INCREMENT,
    nombre_uniforme varchar(50) NOT NULL,
    descripcion varchar(200) NOT NULL,
    foto VARCHAR (100) NOT NULL,
    id_profesor INT NOT NULL,
    id_tipo_uniforme INT NOT NULL,
    precio DECIMAL(8,2) NOT NULL,
    existencias INT NOT NULL,
    CONSTRAINT CHK_precio_catalogo CHECK (precio >= 0),
    CONSTRAINT CHK_exitencias_catalogo CHECK (existencias >= 0),
    CONSTRAINT fk_tbprofesores_catalogo FOREIGN KEY (id_profesor) REFERENCES profesores(id_profesor),
    CONSTRAINT fk_tbtiposuniformes_tbcatalogouniformes FOREIGN KEY (id_tipo_uniforme) REFERENCES tipos_uniformes(id_tipo_uniforme)
);

CREATE TABLE tallas_disponibles (
    id_talla_disponible INT PRIMARY KEY AUTO_INCREMENT,
    id_uniforme INT NOT NULL,
    id_talla INT NOT NULL,
    stock INT  NOT NULL,
    CONSTRAINT CHK_stock_tallas CHECK (stock >= 0),
    CONSTRAINT fk_tbtallasuniformes_tbtallasdisponibles FOREIGN KEY (id_talla) REFERENCES tallas_uniformes(id_talla),
    CONSTRAINT fk_tbcatalogouniformes_tbtallasdisponibles FOREIGN KEY (id_uniforme) REFERENCES catalogos_uniformes(id_uniforme)
);
